{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\YKB\\\\Desktop\\\\AKO_nft_test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\YKB\\\\Desktop\\\\AKO_nft_test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\YKB\\\\Desktop\\\\AKO_nft_test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\YKB\\\\Desktop\\\\AKO_nft_test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\YKB\\\\Desktop\\\\AKO_nft_test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\YKB\\\\Desktop\\\\AKO_nft_test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\YKB\\\\Desktop\\\\AKO_nft_test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\YKB\\\\Desktop\\\\AKO_nft_test\\\\src\\\\components\\\\pages\\\\Create.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport FormData from 'form-data';\nimport './Create.css';\n\nvar Create =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Create, _Component);\n\n  _createClass(Create, [{\n    key: \"ipfsDynamicMint\",\n    value: function () {\n      var _ipfsDynamicMint = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var formData, API_KEY, API_SECRET, url, response, url2, response2, tokenURI;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('starting upload image to ipfs'); // 이미지 파일을 담을 폼 데이터 생성\n\n                formData = new FormData(); // 이미지 파일 담기\n\n                formData.append('file', this.state.imgFile);\n                /*\r\n                //formData value 확인\r\n                for (var value of formData.values()) {\r\n                    console.log(value);\r\n                }\r\n                */\n                //피나타 pinFileToIPFS API 시작\n                // call the keys from .env\n\n                API_KEY = '4c5ac6d90cd1cc22e856';\n                API_SECRET = '86b626e2ea379fec6965500c347d7e799df5a5ec416085bb57591e881a22569a'; // the endpoint needed to upload the file\n\n                url = \"https://api.pinata.cloud/pinning/pinFileToIPFS\";\n                _context.next = 8;\n                return axios.post(url, formData, {\n                  maxContentLength: \"Infinity\",\n                  headers: {\n                    'Content-Type': \"multipart/form-data; boundary=\".concat(formData._boundary),\n                    'pinata_api_key': API_KEY,\n                    'pinata_secret_api_key': API_SECRET\n                  }\n                });\n\n              case 8:\n                response = _context.sent;\n                //결과 출력\n                console.log(response); // get the hash\n\n                this.setState({\n                  ipfsHash: response.data.IpfsHash\n                });\n                console.log(this.state.ipfsHash);\n                console.log('starting starting upload json to ipfs'); //피나타 pinJSONTOIPFS 시작\n                // the endpoint needed to upload the file\n\n                url2 = \"https://api.pinata.cloud/pinning/pinJSONToIPFS\";\n                _context.next = 16;\n                return axios.post(url2, {\n                  name: this.state.imgName,\n                  description: this.state.imgDescription,\n                  image: 'https://gateway.pinata.cloud/ipfs/' + this.state.ipfsHash\n                }, {\n                  maxContentLength: \"Infinity\",\n                  headers: {\n                    'pinata_api_key': API_KEY,\n                    'pinata_secret_api_key': API_SECRET\n                  }\n                });\n\n              case 16:\n                response2 = _context.sent;\n                console.log(response2); // get the hash\n\n                this.setState({\n                  ipfsHash: response2.data.IpfsHash\n                });\n                console.log(this.state.ipfsHash);\n                tokenURI = 'https://gateway.pinata.cloud/ipfs/' + this.state.ipfsHash; //Mint\n\n                this.props.mint(tokenURI);\n                this.props.sell(1, 10);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function ipfsDynamicMint() {\n        return _ipfsDynamicMint.apply(this, arguments);\n      }\n\n      return ipfsDynamicMint;\n    }() // 미리보기를 위한 이미지 처리 과정\n\n  }]);\n\n  function Create(props) {\n    var _this;\n\n    _classCallCheck(this, Create);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Create).call(this, props));\n\n    _this.encodeFileToBase64 = function (fileBlob) {\n      var reader = new FileReader();\n      reader.readAsDataURL(fileBlob);\n      return new Promise(function (resolve) {\n        reader.onload = function () {\n          _this.setState({\n            imgSrc: reader.result\n          });\n\n          resolve();\n        };\n      });\n    };\n\n    _this.state = {\n      imgFile: null,\n      ipfsHash: '',\n      imgName: '',\n      imgDescription: '',\n      imgSrc: ''\n    };\n    return _this;\n  }\n\n  _createClass(Create, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Load an image.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), \" \\u2003 \\u2003 \\u2003\", React.createElement(\"input\", {\n        type: \"file\",\n        name: \"imgFile\",\n        onChange: function onChange(event) {\n          event.preventDefault();\n          var fobj = event.target.files[0];\n\n          _this2.setState({\n            imgFile: fobj\n          });\n\n          _this2.encodeFileToBase64(event.target.files[0]);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), \" \\u2003 \\u2003 \\u2003\", React.createElement(\"div\", {\n        className: \"preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" \", this.state.imgSrc && React.createElement(\"img\", {\n        src: this.state.imgSrc,\n        alt: \"preview-img\",\n        width: \"200\",\n        height: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), \" \")), React.createElement(\"div\", {\n        class: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"imgName\",\n        placeholder: \"\\uD83D\\uDC40\",\n        onChange: function onChange(event) {\n          event.preventDefault();\n\n          _this2.setState({\n            imgName: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"textbox\",\n        name: \"imgDescription\",\n        placeholder: \"Describe your NFT.\",\n        onChange: function onChange(event) {\n          event.preventDefault();\n\n          _this2.setState({\n            imgDescription: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.ipfsDynamicMint();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Mint\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.props.buy(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"buy 1\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.props.sell(1, 10);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"sell 1 at 10\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.props.changePrice(1, 5);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"change price 1 to 5\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.props.sellCancel(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"cancel sell 1\"))));\n    }\n  }]);\n\n  return Create;\n}(Component);\n\nexport default Create;","map":{"version":3,"sources":["C:\\Users\\YKB\\Desktop\\AKO_nft_test\\src\\components\\pages\\Create.js"],"names":["React","Component","axios","FormData","Create","console","log","formData","append","state","imgFile","API_KEY","API_SECRET","url","post","maxContentLength","headers","_boundary","response","setState","ipfsHash","data","IpfsHash","url2","name","imgName","description","imgDescription","image","response2","tokenURI","props","mint","sell","encodeFileToBase64","fileBlob","reader","FileReader","readAsDataURL","Promise","resolve","onload","imgSrc","result","event","preventDefault","fobj","target","files","value","ipfsDynamicMint","buy","changePrice","sellCancel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport FormData from 'form-data';\r\nimport './Create.css';\r\n\r\nclass Create extends Component {\r\n\r\n    async ipfsDynamicMint() {\r\n        console.log('starting upload image to ipfs')\r\n\r\n        // 이미지 파일을 담을 폼 데이터 생성\r\n        const formData = new FormData()\r\n\r\n        // 이미지 파일 담기\r\n        formData.append('file', this.state.imgFile)\r\n\r\n        /*\r\n        //formData value 확인\r\n        for (var value of formData.values()) {\r\n            console.log(value);\r\n        }\r\n        */\r\n\r\n        //피나타 pinFileToIPFS API 시작\r\n        // call the keys from .env\r\n        const API_KEY = '4c5ac6d90cd1cc22e856'\r\n        const API_SECRET = '86b626e2ea379fec6965500c347d7e799df5a5ec416085bb57591e881a22569a'\r\n\r\n        // the endpoint needed to upload the file\r\n        const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`\r\n\r\n        const response = await axios.post(\r\n            url,\r\n            formData,\r\n            {\r\n                maxContentLength: \"Infinity\",\r\n                headers: {\r\n                    'Content-Type': `multipart/form-data; boundary=${formData._boundary}`,\r\n                    'pinata_api_key': API_KEY,\r\n                    'pinata_secret_api_key': API_SECRET\r\n                }\r\n            }\r\n        )\r\n\r\n        //결과 출력\r\n        console.log(response)\r\n\r\n        // get the hash\r\n        this.setState({ ipfsHash: response.data.IpfsHash })\r\n        console.log(this.state.ipfsHash)\r\n\r\n\r\n\r\n        console.log('starting starting upload json to ipfs')\r\n\r\n        //피나타 pinJSONTOIPFS 시작\r\n        // the endpoint needed to upload the file\r\n        const url2 = `https://api.pinata.cloud/pinning/pinJSONToIPFS`\r\n\r\n        const response2 = await axios.post(\r\n            url2, {\r\n            name: this.state.imgName,\r\n            description: this.state.imgDescription,\r\n            image: 'https://gateway.pinata.cloud/ipfs/' + this.state.ipfsHash\r\n        },\r\n            {\r\n                maxContentLength: \"Infinity\",\r\n                headers: {\r\n                    'pinata_api_key': API_KEY,\r\n                    'pinata_secret_api_key': API_SECRET\r\n                }\r\n            }\r\n        )\r\n\r\n        console.log(response2)\r\n\r\n        // get the hash\r\n        this.setState({ ipfsHash: response2.data.IpfsHash })\r\n        console.log(this.state.ipfsHash)\r\n        const tokenURI = 'https://gateway.pinata.cloud/ipfs/' + this.state.ipfsHash\r\n\r\n        //Mint\r\n        this.props.mint(tokenURI)\r\n        this.props.sell(1, 10)\r\n    }\r\n\r\n    // 미리보기를 위한 이미지 처리 과정\r\n    encodeFileToBase64 = (fileBlob) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(fileBlob);\r\n        return new Promise((resolve) => {\r\n            reader.onload = () => {\r\n                this.setState({ imgSrc: reader.result })\r\n                resolve();\r\n            };\r\n        }\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            imgFile: null,\r\n            ipfsHash: '',\r\n            imgName: '',\r\n            imgDescription: '',\r\n            imgSrc: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"left\">\r\n                    <h3>Load an image.</h3>\r\n                \r\n\r\n                    <br /> &emsp; &emsp; &emsp;\r\n                    <input type=\"file\" name=\"imgFile\" onChange={(event) => {\r\n                        event.preventDefault()\r\n                        const fobj = event.target.files[0]\r\n                        this.setState({ imgFile: fobj })\r\n                        this.encodeFileToBase64(event.target.files[0]);\r\n                    }} />\r\n\r\n                    <br /> &emsp; &emsp; &emsp;\r\n                    <div className=\"preview\"> {this.state.imgSrc && <img src={this.state.imgSrc} alt=\"preview-img\" width='200' height='200' />} </div>\r\n                </div>\r\n\r\n                <div class=\"right\">\r\n                    <div>\r\n                        <h3>Name</h3>\r\n                        <input type=\"text\" name=\"imgName\" placeholder=\"👀\" onChange={(event) => {\r\n                            event.preventDefault()\r\n                            this.setState({ imgName: event.target.value })\r\n                        }} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3>Description</h3>\r\n                        <input type=\"text\" className=\"textbox\" name=\"imgDescription\" placeholder=\"Describe your NFT.\" onChange={(event) => {\r\n                            event.preventDefault()\r\n                            this.setState({ imgDescription: event.target.value })\r\n                        }} />\r\n                    </div>\r\n\r\n                    <br />\r\n                    <div>\r\n                        <button onClick={() => {\r\n                            this.ipfsDynamicMint()\r\n                        }}>Mint</button>\r\n                        <button onClick={() => {\r\n                            this.props.buy(1)\r\n                        }}>buy 1</button>\r\n                        <button onClick={() => {\r\n                            this.props.sell(1, 10)\r\n                        }}>sell 1 at 10</button>\r\n                        <button onClick={() => {\r\n                            this.props.changePrice(1,5)\r\n                        }}>change price 1 to 5</button>\r\n                        <button onClick={() => {\r\n                            this.props.sellCancel(1)\r\n                        }}>cancel sell 1</button>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Create;"]},"metadata":{},"sourceType":"module"}